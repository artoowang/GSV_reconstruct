%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION streetview_download (db_name, out_dir)
%
% 	Download Google StreetView panoramas based on current georeferenced 
%	photos, and cut the panoramas into perspective images and copy to
%	landmark directories. Note: this script requires a list of panorama
%	IDs which is generated by
%	http://www.cs.cornell.edu/w8/~cpwang/Landmarks3/GSVScraper/streetview_panoid.html
%
% INPUTS:
%	db_name:	e.g., taipei
%	out_dir:	e.g., db/taipei
%
% Modified by: Chun-Po Wang, 2011 Cornell University
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function streetview_download (db_name, out_dir)

	% Check input
	if(isempty(db_name) || isempty(out_dir))
		error('DB name and output dir path cannot be empty: db_name = %s, out_dir = %s', db_name, out_dir);
	end

	% Build working directory
	%removeDir(out_dir);	% Do not clean the output directory since we will start from where we left
	tmp_dir = [out_dir '/tmp'];
	removeDir(tmp_dir);
	mkdir(tmp_dir);
	if(~exist(out_dir, 'dir'))
		mkdir(out_dir);
	end
	out_dir_panos = [out_dir '/pano'];
	if(~exist(out_dir_panos, 'dir'))
		mkdir(out_dir_panos);
	end

	% This is where we store the list of panorama IDs generated by 
	% http://www.cs.cornell.edu/w8/~cpwang/Landmarks3/GSVScraper/streetview_panoid.html
	list_url = ['http://www.cs.cornell.edu/w8/~cpwang/Landmarks3/GSVScraper/data/' db_name];
	list_str = urlread(list_url);
	list_file_path = [tmp_dir '/' db_name];
	fprintf('Read list file from %s, and write to temporary file %s\n', list_url, list_file_path);
	fp = fopen(list_file_path, 'w');
	fprintf(fp, '%s', list_str);
	fclose(fp);

	% Read data from the list file
	fp = fopen(list_file_path, 'r');
	cnt = 0;
	while(~feof(fp))
		tline = fgetl(fp);
		if(~ischar(tline))
			fprintf('Unrecognized line: %s\n', tline);
			continue;
		end
		tokens = regexp(tline, '^[0-9]+\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)', 'tokens');
		if(isempty(tokens))
			fprintf('Unrecognized line: %s\n', tline);
			continue;
		end
		panoid = tokens{1}{1};
		lat = tokens{1}{2};
		lng = tokens{1}{3};
		yaw = str2double(tokens{1}{4});
		
		% Check if all the results are generated
		cnt = cnt + 1;
		if(checkResult(panoid, lat, lng, yaw, out_dir, out_dir_panos))
			fprintf('%d: %s is processed\n', cnt, panoid);
		else
			fprintf('%d: processing %s...\n', cnt, panoid);
			pano_path = [out_dir_panos '/' panoid '.jpg'];
			img = streetview_download_single_panorama(panoid, tmp_dir, 4);
			imwrite(img, pano_path);

			for i=0:6
				rel_yaw = 360*i/7;
				cutout_img = streetview_cutout_single_panorama(img, rel_yaw, -4);
				img_path = sprintf('%s/%s_%s_%.4f_-004.jpg', out_dir, lat, lng, mod(yaw+rel_yaw, 360));
				fprintf('  Saving %s ...\n', img_path);
				imwrite(cutout_img, img_path);
			end
		end
	end
	fclose(fp);
end

function removeDir (dir_path)
	if(exist(dir_path, 'file'))
		if(system(['/bin/rm -rf ' dir_path]) ~= 0)
			error('Cannot remove %s, abort.', dir_path);
		end
	end
end

% Check if a given panorama has been downloaded and cut
function done = checkResult (panoid, lat, lng, yaw, out_dir, out_dir_panos)
	done = 0;
	% Check if we have the panorama file
	pano_path = [out_dir_panos '/' panoid '.jpg'];
	if(~exist(pano_path, 'file'))
		return;
	end
	% Check if we have the cutouts
	for i=0:6
		rel_yaw = 360*i/7;
		img_path = sprintf('%s/%s_%s_%.4f_-004.jpg', out_dir, lat, lng, mod(yaw+rel_yaw, 360));
		if(~exist(img_path, 'file'))
			return;
		end
	end
	done = 1;
end
