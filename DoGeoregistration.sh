#!/bin/bash

PROCESS_BUNDLER=/home/cpwang/symlinks/reconstruct/bundler/bin/process_bundler

# Initial values
no_VPs=0

# Read arguments
# options may be followed by one colon to indicate they have a required argument
if ! options=$(getopt -o n -l no-VPs -- "$@"); then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

set -- $options

while [ $# -gt 0 ]; do
	case $1 in
		-n|--no-VPs) no_VPs=1 ;;
		(--) shift; break;;
		(-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
		(*) break;;
	esac
	shift
done

# Other arguments
if [ $# -ne 2 ] 
then
    echo "Usage: $0 [-n|--no-VPs] <landmark_id> <component_id>"
    exit
fi

# This is required from getopt. See man page.
eval "LID=$1"
eval "CID=$2"

# This script assumes it executed under main landmarks directory
# (e.g., /hydra/S4/Landmarks3)
if [ ! -x "./checkRootDirectory.sh" ] || ! ./checkRootDirectory.sh; then
	echo >&2 "$0 needs to be executed under main landmarks directory (e.g., /hydra/S4/Landmarks3/)"
	exit
fi

LID=$(./parseLID.sh "$LID")		# Landmark ID
ID="$LID.$CID"
DIR="data/$LID"

echo "ID: $ID"

# Change to dataset directory, and get absolute directory
cd $DIR

# Check for necessary files
if [ ! -e "bundles_new/list.$CID.txt"  -o  ! -e "bundles_new/bundle.$CID.out" ]; then
	echo >&2 "Cannot find bundles_new/list.$CID.txt or bundles_new/bundle.$CID.out. Abort"
	exit
fi

mkdir -p geo

# Georegistration
if [ "$no_VPs" = "0" ]; then
	$PROCESS_BUNDLER bundles_new/list.$CID.txt --bundle bundles_new/bundle.$CID.out --georegister --georegister_file geotags_uniq.txt --output_geocentric --geo_threshold 20.0 --estimate_up_vector_szeliski --use_vanishing_points 2>&1 | tee geo/geo.$CID.log
else
	$PROCESS_BUNDLER bundles_new/list.$CID.txt --bundle bundles_new/bundle.$CID.out --georegister --georegister_file geotags_uniq.txt --output_geocentric --geo_threshold 20.0 --estimate_up_vector_szeliski 2>&1 | tee geo/geo.$CID.log
fi
/bin/mv -f bundle.geo.out geo/bundle.$CID.out
/bin/mv -f list.geo.txt geo/list.$CID.txt
/bin/mv -f xform.txt geo/xform.$CID.txt

# Copy VP data generated by process_bundler (georegistration)
if [ "$no_VPs" = "0" ]; then
	VP_DIR="geo/vp.$CID"
	mkdir -p "$VP_DIR"
	/bin/mv -f vps_xformed.txt "$VP_DIR/"
	/bin/mv -f hough.jpg "$VP_DIR/" 
	/bin/mv -f hough.dat "$VP_DIR/"
fi

# Generate .ply file
/hydra/S2/snavely/code/Bundler-lite/src/Bundle2Ply geo/bundle.$CID.out geo/bundle.$CID.ply

echo "DoGeoregistration.sh done."

